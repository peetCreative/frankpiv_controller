<?xml version="1.0"?>
<launch>
    <arg name="operation_type" default="simulation" doc="operation type: [simulation, robot]"/>
    <arg name="run_remote" default="false" doc="Should the simulation/robot be run on a remote machine?"/>
    <arg name="run_simulation"     value="$(eval arg('operation_type') == 'simulation')"  doc="Should the gazebo simulation be launched? Use false in case if you want to include this file and launch gazebo yourself" />
    <arg name="run_robot"   value="$(eval arg('operation_type') == 'robot')"/>

    <arg name="disable_gui" default="false" doc="option to disable gui"/>
    <arg name="disable_gazebo_gui" default="true" doc="option to disable only gazebo gui, for performance"/>

    <arg name="plot_start_delay" default="10.0" />
    <arg name="generate_movements" default="false" />
    <arg name="generate_movements_arg" value="$(eval '--generate-movements' if arg('generate_movements') else '')"/>
    <arg name="rviz"        default="false" doc="Should RVIz be launched?" />
    <arg name="interactive" default="false" />
    <arg name="interactive_arg" value="$(eval '' if arg('interactive') else '--no-interactive')"/>
    <arg name="arm_id"      default="panda" doc="Name of the panda robot to spawn" />
    <arg name="mass"        default="$(eval 1.0 if arg('run_robot') else 0.0)"/>
    <arg name="machine_name" value="$(eval 'REMOTE' if arg('run_remote') else '')"/>
    <arg name="remote_address" default=""/>
    <arg name="remote_user" default=""/>
    <arg name="remote_env" default=""/>

    <machine name="REMOTE"
             address="$(arg remote_address)"
             user="$(arg remote_user)"
             env-loader="$(arg remote_env)"/>

    <!-- ip of the robot (on the remote adress)-->
    <arg name="robot_ip" default=""/>

    <node name="rqt_console" pkg="rqt_console" type="rqt_console" unless="$(arg disable_gui)" />

    <include file="$(find frankpiv_controller)/launch/simulation.launch" if="$(arg run_simulation)">
        <!-- <arg name="paused" value="true"/> -->
        <arg name="machine_name" value="$(arg machine_name)"/>
        <arg name="headless" value="$(eval arg('disable_gui') or arg('disable_gazebo_gui'))"/>
    </include>

    <include file="$(find frankpiv_controller)/launch/robot.launch" if="$(arg run_robot)">
        <arg name="machine_name" value="$(arg machine_name)"/>
        <arg name="robot_ip" value="$(arg robot_ip)"/>
    </include>

    <rosparam file="$(find frankpiv_controller)/cfg/controller.yaml" subst_value="true" />
    <node pkg="controller_manager"
          type="spawner"
          name="$(arg arm_id)_controller_spawner"
          respawn="false" output="screen"
          args="--wait-for initialized franka_state_controller laparoscope_controller"
    />

    <node name="robot_state_publisher" pkg="robot_state_publisher" type="robot_state_publisher" />
    <node name="joint_state_publisher" type="joint_state_publisher" pkg="joint_state_publisher">
        <rosparam param="source_list">[franka_state_controller/joint_states] </rosparam>
        <param name="rate" value="30"/>
    </node>
    <!--May not be needed-->
    <node name="joint_state_desired_publisher" type="joint_state_publisher" pkg="joint_state_publisher">
        <rosparam param="source_list">[franka_state_controller/joint_states_desired] </rosparam>
        <param name="rate" value="30"/>
        <remap from="joint_states" to="joint_states_desired" />
    </node>

    <node name="trajectory_generator"
          pkg="frankpiv_controller"
          type="trajectory_generator.py"
          args="$(arg interactive_arg) $(arg generate_movements_arg)"
          unless="$(arg disable_gui)"
    >
        <param name="link_name" value="$(arg arm_id)_link0" />
        <remap to="laparoscope_controller/pivot_trajectory" from="pivot_trajectory" />
        <remap to="laparoscope_controller/pivot_position" from="pivot_position" />
    </node>
<!--    pivot_controller/tip_pose_error_trans-->
    <node name="rqt_reconfigure" pkg="rqt_reconfigure" type="rqt_reconfigure"
          unless="$(arg disable_gui)" required="false"/>

    <node  pkg="rviz" type="rviz" output="screen" name="rviz"
           args="-d $(find frankpiv_controller)/launch/rviz/franka_description_with_marker.rviz"
           unless="$(arg disable_gui)"/>
    <node name="error_plot" pkg="rqt_plot"  output="screen" type="rqt_plot"
          args="/laparoscope_controller/pivot_error/data /laparoscope_controller/tip_pose_error_trans/data"
          launch-prefix="bash -c 'sleep $(arg plot_start_delay); $0 $@' "
          unless="$(arg disable_gui)"/>
</launch>
